ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = factor(year))) +
geom_bar(stat = "identity") +
facet_wrap(~ state) +
labs(x = "Epiweek", y = "cases", title = "Cases by Epiweek")
ggplot(data = tdata_fill, aes(x = epiweek, y = w_temp, fill = factor(year))) +
geom_bar(stat = "identity") +
facet_wrap(~ state) +
labs(x = "Epiweek", y = "w_temp", title = "Temperature by Epiweek")
ggplot(data = tdata_fill, aes(x = epiweek, y = w_precip, fill = factor(year))) +
geom_bar(stat = "identity") +
facet_wrap(~ state) +
labs(x = "Epiweek", y = "w_precip", title = " Precipitation by Epiweek")
ggplot(data = tdata_fill, aes(x = epiweek, y = w_humid, fill = factor(year))) +
geom_bar(stat = "identity") +
facet_wrap(~ state) +
labs(x = "Epiweek", y = "w_humid", title = "Humidity by Epiweek")
#stacked bar chart: compare number of cases per year by state
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = as.factor(year)))+ geom_bar (stat ="identity", position = "stack") + facet_wrap(~ state)
#side by side bar chart: compare number of cases per week per state
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = as.factor(state)))+ geom_bar (stat ="identity", position = "dodge") + facet_wrap(~ year)
#create scatterplot: shows relationship between continuous variables
ggplot(data = tdata_fill, aes(x = w_precip, y = cases, color = factor(year))) +
geom_point() +
facet_wrap(~ state) +
labs(x = "w_precip", y = "cases", title = "Scatter Plot of cases against Precipitation, Grouped by State")
ggplot(data = tdata_fill, aes(x = w_humid, y = cases, color = factor(year))) +
geom_point() +
facet_wrap(~ state) +
labs(x = "w_humid", y = "cases", title = "Scatter Plot of cases against humidity, Grouped by State")
ggplot(data = tdata_fill, aes(x = w_temp, y = cases, color = factor(year))) +
geom_point() +
facet_wrap(~ state) +
labs(x = "w_temp", y = "cases", title = "Scatter Plot of cases against Temperature, Grouped by State")
ggplot(data = tdata_fill, aes(x = w_temp, y = cases, color = factor(state))) +
geom_point() +
facet_wrap(~ year) +
labs(x = "w_temp", y = "cases", title = "Scatter Plot of cases against temp, Grouped by year")
ggplot(data = tdata_fill, aes(x = w_humid, y = cases, color = factor(state))) +
geom_point() +
facet_wrap(~ year) +
labs(x = "w_humid", y = "cases", title = "Scatter Plot of cases against humid, Grouped by year")
install.packages("corrr")
# Create a correlation table (using Spearmans correlation) for total values
correlation_table <- tdata_fill %>%
group_by(state, year) %>%
select(cases, w_tempmin, w_temp, w_tempmax, w_humid, w_precip, w_precov) %>%
correlate(method = "spearman")
# Print the correlation table
print(correlation_table)
View(correlation_table)
# # Function to calculate correlations for each group
calculate_group_correlations <- function(tdata_fill) {
correlations <- tdata_fill %>%
select(cases, w_tempmin, w_temp, w_tempmax, w_humid, w_precip, w_precov) %>%
correlate(method = "spearman")
return(correlations)
}
#
# Create correlations for grouped data, and combine the results
correlation_tab <- tdata_fill %>%
group_by(state, year) %>%
do(calculate_group_correlations(.))
# Print the correlation table
print(correlation_tab)
View (correlation_tab)
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, group = interaction(state, year), color = year)) +
geom_line() + facet_wrap(~ state) + labs(x = "Epiweek", y = "cases", title = "Cases by Epiweek")
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = factor(year))) +
geom_bar(stat = "identity") +
facet_wrap(~ state) +
labs(x = "Epiweek", y = "cases", title = "Cases by Epiweek")
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = as.factor(year)))+ geom_bar (stat ="identity", position = "stack") + facet_wrap(~ state)
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = (year)))+ geom_bar (stat ="identity", position = "stack") + facet_wrap(~ state)
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = year)+ geom_bar (stat ="identity", position = "stack") + facet_wrap(~ state))
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = year)+ geom_bar (stat ="identity", position = "stack") + facet_wrap(~ state))
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = factor(year)) + geom_bar (stat ="identity", position = "stack") + facet_wrap(~ state))
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = factor(year))) + geom_bar (stat ="identity", position = "stack") + facet_wrap(~ state)
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = (year))) + geom_bar (stat ="identity", position = "stack") + facet_wrap(~ state)
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = year)) + geom_bar (stat ="identity", position = "stack") + facet_wrap(~ state)
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = year)) + geom_bar (stat ="identity", position = "stack") + facet_wrap(~ state) + labs(title = "Weekly Cases across Years")
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = as.factor(state)))+ geom_bar (stat ="identity", position = "dodge") + facet_wrap(~ year)
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = (state)))+ geom_bar (stat ="identity", position = "dodge") + facet_wrap(~ year)
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = state))+ geom_bar (stat ="identity", position = "dodge") + facet_wrap(~ year)
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = state))+ geom_bar (stat ="identity", position = "dodge") + facet_wrap(~ year) + labs(title = "Weekly Cases across Years")
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = state))+ geom_bar (stat ="identity", position = "dodge") + facet_wrap(~ year) + labs(title = "Weekly Case count across States")
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = factor(year))) +
geom_bar(stat = "identity") +
facet_wrap(~ state) +
labs(x = "Epiweek", y = "cases", title = "Cases by Epiweek")
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = state))+ geom_bar (stat ="identity", position = "dodge") + facet_wrap(~ year) + labs(title = "Weekly Case count across States")
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, group = interaction(state, year), color = year)) +
geom_line() + facet_wrap(~ state) + labs(x = "Epiweek", y = "cases", title = "Cases by Epiweek")
ggplot(data = tdata_fill, aes(x = epiweek, y = cases)) +
geom_bar(stat = "identity") +
facet_wrap(~ state) +
labs(x = "Epiweek", y = "Cases", title = "Cases by Epiweek")
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, group = interaction(state, year), color = year)) +
geom_line() + facet_wrap(~ state) + labs(x = "Epiweek", y = "cases", title = "Cases by Epiweek")
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = factor(year))) +
geom_bar(stat = "identity") +
facet_wrap(~ state) +
labs(x = "Epiweek", y = "cases", title = "Cases by Epiweek")
#side by side bar chart: compare number of cases per week per state
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = state))+ geom_bar (stat ="identity", position = "dodge") +
facet_wrap(~ year) + labs(title = "Weekly Case count across States")
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = factor(year))) +
geom_bar(stat = "identity") +
facet_wrap(~ state) +
labs(x = "Epiweek", y = "cases", title = "Cases by Epiweek per Year")
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = state))+ geom_bar (stat ="identity", position = "dodge") +
facet_wrap(~ year) + labs(title = "Weekly Case count across States")
#stacked bar chart: compare number of cases per year by state
ggplot(data = tdata_fill, aes(x = epiweek, y = w_temp, fill = factor(year))) +
geom_bar(stat = "identity") +
facet_wrap(~ state) +
labs(x = "Epiweek", y = "w_temp", title = "Temperature by Epiweek")
ggplot(data = tdata_fill, aes(x = epiweek, y = w_temp, group = interaction(state, year), color = year)) +
geom_line() + facet_wrap(~ state) + labs(x = "Epiweek", y = "cases", title = "Temperature by Epiweek")
ggplot(data = tdata_fill, aes(x = epiweek, y = w_precip, group = interaction(state, year), color = year)) +
geom_line() + facet_wrap(~ state) + labs(x = "Epiweek", y = "w_precip", title = "Precipitation by Epiweek")
#line graph of temperature by epiweek across years
ggplot(data = tdata_fill, aes(x = epiweek, y = w_temp, group = interaction(state, year), color = year)) +
geom_line() + facet_wrap(~ state) + labs(x = "Epiweek", y = "temperature", title = "Temperature by Epiweek")
ggplot(data = tdata_fill, aes(x = epiweek, y = w_precip, group = interaction(state, year), color = year)) +
geom_line() + facet_wrap(~ state) + labs(x = "Epiweek", y = "precipitation", title = "Precipitation by Epiweek")
#line graph of humidity by epiweek across years
ggplot(data = tdata_fill, aes(x = epiweek, y = w_humid, group = interaction(state, year), color = year)) +
geom_line() + facet_wrap(~ state) + labs(x = "Epiweek", y = "humidity", title = "Humidity by Epiweek")
#cases versus precipitation
ggplot(data = tdata_fill, aes(x = w_precip, y = cases, color = factor(year))) +
geom_point() +
facet_wrap(~ state) +
labs(x = "precipitation", y = "cases", title = "Cases against Precipitation by State")
ggplot(data = tdata_fill, aes(x = w_precip, y = cases, color = year)) +
geom_point() +
facet_wrap(~ state) +
labs(x = "precipitation", y = "cases", title = "Cases against Precipitation by State")
ggplot(data = tdata_fill, aes(x = w_precov, y = cases, color = year)) +
geom_point() +
facet_wrap(~ state) +
labs(x = "precipitation cover", y = "cases", title = "Cases against Precipitation cover by State")
ggplot(data = tdata_fill, aes(x = w_humid, y = cases, color = year)) +
geom_point() +
facet_wrap(~ state) +
labs(x = "humidity", y = "cases", title = "Cases against humidity by State")
ggplot(data = tdata_fill, aes(x = w_temp, y = cases, color = year)) + geom_point() +
facet_wrap(~ state) +
labs(x = "temperature", y = "cases", title = "Cases against Temperature by State")
ggplot(data = tdata_fill, aes(x = w_tempmin, y = cases, color = state)) + geom_point() +
facet_wrap(~ year) +
labs(x = "minimum temperature", y = "cases", title = "Cases against Minimum Temperature by year")
ggplot(data = tdata_fill, aes(x = w_tempmax, y = cases, color = state)) + geom_point() +
facet_wrap(~ year) +
labs(x = "maximum temperature", y = "cases", title = "Cases against Maximum Temperature by year")
library(corrr)
correlation_table <- tdata_fill %>%
group_by(state, year) %>%
select(cases, w_tempmin, w_temp, w_tempmax, w_humid, w_precip, w_precov) %>%
correlate(method = "spearman")
# Print the correlation table
print(correlation_table)
View(correlation_table)
calculate_group_correlations <- function(tdata_fill) {
correlations <- tdata_fill %>%
select(cases, w_tempmin, w_temp, w_tempmax, w_humid, w_precip, w_precov) %>%
correlate(method = "spearman")
return(correlations)
}
correlation_tab <- tdata_fill %>%
group_by(state, year) %>%
do(calculate_group_correlations(.))
# Print the correlation table
print(correlation_tab)
View (correlation_tab)
library(corrr)
correlation_table <- tdata_fill %>%
#group_by(state, year) %>%
select(cases, w_tempmin, w_temp, w_tempmax, w_humid, w_precip, w_precov) %>%
correlate(method = "spearman")
# Print the correlation table
print(correlation_table)
View(correlation_table)
correlation_table <- tdata_fill %>%
ungroup() %>%
print()
select(cases, w_tempmin, w_temp, w_tempmax, w_humid, w_precip, w_precov) %>%
correlate(method = "spearman")
correlation_table%
correlation_table %>%
select(cases, w_tempmin, w_temp, w_tempmax, w_humid, w_precip, w_precov) %>%
correlate(method = "spearman")
# Print the correlation table
print(correlation_table)
View(correlation_table)
correlation_table %>%
select(cases, w_tempmin, w_temp, w_tempmax, w_humid, w_precip, w_precov) %>%
correlate(method = "spearman")
# Print the correlation table
print(correlation_table)
correlation_table <- tdata_fill %>%
ungroup()
# Perform correlation analysis on the selected columns
correlation_results <- correlation_table %>%
select(cases, w_tempmin, w_temp, w_tempmax, w_humid, w_precip, w_precov) %>%
correlate(method = "spearman")
# Print the correlation table
print(correlation_results)
# Optionally, you can also view the correlation table in a viewer
View(correlation_results)
calculate_group_correlations <- function(tdata_fill) {
correlations <- tdata_fill %>%
select(cases, w_tempmin, w_temp, w_tempmax, w_humid, w_precip, w_precov) %>%
correlate(method = "spearman")
return(correlations)
}
print (correlations)
correlation_table <- tdata_fill %>%
ungroup() %>%
print()
correlation_table %>%
select(cases, w_tempmin, w_temp, w_tempmax, w_humid, w_precip, w_precov) %>%
correlate(method = "spearman")
print(correlation_table)
View(correlation_table)
correlation_table <- tdata_fill %>%
ungroup()
correlation_results <- correlation_table %>%
select(cases, w_tempmin, w_temp, w_tempmax, w_humid, w_precip, w_precov) %>%
correlate(method = "spearman")
print(correlation_results)
View(correlation_results)
mean_weather <- tdata %>%
group_by(state, year) %>%
summarise(meanw_tempmin = mean(w_tempmin),
meanw_temp = mean(w_temp),
meanw_tempmax = mean(w_tempmax),
meanw_humid = mean(w_humid),
meanw_precip = mean(w_precip),
meanw_precov = mean(w_precov))
print(mean_weather)
meanw_tempmin <- tdata %>%
group_by(state, year) %>%
summarise(meanw_tempmin = mean(w_tempmin)) %>%
print()
meanw_temp <- tdata %>%
group_by(state, year) %>%
summarise(meanw_temp = mean(w_temp)) %>%
print()
meanw_tempmax <- tdata %>%
group_by(state, year) %>%
summarise(meanw_tempmax = mean(w_tempmax)) %>%
print()
meanw_humid <- tdata %>%
group_by(state, year) %>%
summarise(meanw_humid = mean(w_humid)) %>%
print()
meanw_precip <- tdata %>%
group_by(state, year) %>%
summarise(meanw_precip = mean(w_precip)) %>%
print()
meanw_precov <- tdata %>%
group_by(state, year) %>%
summarise(meanw_precov = mean(w_precov)) %>%
print()
mean_weather <- tdata %>%
group_by(state, year) %>%
summarise(meanw_tempmin = mean(w_tempmin),
meanw_temp = mean(w_temp),
meanw_tempmax = mean(w_tempmax),
meanw_humid = mean(w_humid),
meanw_precip = mean(w_precip),
meanw_precov = mean(w_precov))
print(mean_weather)
# Merge mean cases and mean weather
merged_table <- left_join(mean_cases, mean_weather, by = c("state", "year"))
print(merged_table)
standard_deviations <- tdata_fill %>%
group_by(state, year) %>%
summarise(sd_cases = sd(cases),
sd_w_tempmin = sd(w_tempmin),
sd_w_temp = sd(w_temp),
sd_w_tempmax = sd(w_tempmax),
sd_w_humid = sd(w_humid),
sd_w_precip = sd(w_precip),
sd_w_precov = sd(w_precov))
print(standard_deviations)
merged_table <- left_join(merged_table, standard_deviations, by = c("state", "year"))
# Print the final merged table
print(merged_table)
View(merged_table)
mean_climate <- tdata_fill  %>%
group_by(state,year) %>%
summarise( meanw_tempmin = mean(w_tempmin),
meanw_temp = mean(w_temp),
meanw_tempmax = mean(w_tempmax),
meanw_precip = mean(w_precip),
meanw_precov = mean(w_precov),
meanw_humid = mean(w_humid))
print(mean_climate)
merged_table <- left_join(mean_cases, mean_climate, standard_deviations, by = c("state", "year"))
print(merged_table)
library(readxl)
tdata <- read_excel("wlfdata.xlsx")
View(tdata)
glimpse(tdata)
class(tdata)
tdata <- as_tibble(tdata)
class(tdata)
tdata <- tdata %>%
clean_names() %>%
rename( w_tempmax = tempmaxw,
w_tempmin = tempminw,
w_temp = tempw,
w_humid = humidityw,
w_precip = precipw,
w_precov = precipcovw)
tdata$state <- as.factor(tdata$state)
tdata$epiweek <- as.factor(tdata$epiweek)
tdata$year <- as.factor(tdata$year)
tdata$cases <- as.numeric(tdata$cases)
glimpse(tdata)
View(tdata)
mean_cases <- tdata
summarise(mean_cases = mean(cases, na.rm = TRUE)) %>%
print()
tdata_fill %>%
group_by(state, year)  %>%
hist(tdata_fill$cases)
histogram <- tdata_fill %>%
ggplot(aes(x = cases)) +
geom_histogram(bins = 10) +  # Adjust the number of bins as needed
facet_grid(state ~ year) +   # Create a separate histogram for each combination of state and year
labs(x = "Cases", y = "Frequency", title = "Histogram of Cases by State and Year")
# Print the histogram
print(histogram)
histogram <- tdata_fill %>%
ggplot(aes(x = w_temp)) + geom_histogram(bins = 10) +  facet_grid(state ~ year) +
labs(x = "Cases", y = "Frequency", title = "Histogram of Cases by State and Year")
print(histogram)
histogram <- tdata_fill %>%
ggplot(aes(x = w_precip)) + geom_histogram(bins = 10) +  facet_grid(state ~ year) +
labs(x = "precipitation", y = "Frequency", title = "Histogram of Cases by State and Year")
print(histogram)
#Creating a function that will return correlations for each group
calculate_group_correlations <- function(tdata_fill) {
correlations <- tdata_fill %>%
select(epiweek, cases, w_tempmin, w_temp, w_tempmax, w_humid, w_precip, w_precov) %>%
correlate(method = "spearman")
return(correlations)
}
#applying the function to create a grouped correlation table
correlation_tab <- tdata_fill %>%
group_by(state, year) %>%
do(calculate_group_correlations(.))
print(correlation_tab)
View (correlation_tab)
histogram <- tdata_fill %>%
ggplot(aes(x = w_temp)) + geom_histogram(bins = 10) +  facet_grid(state ~ year) +
labs(x = "Temperature", y = "Frequency", title = "Histogram of Cases by State and Year")
print(histogram)
#Importing and viewing data------------------------------------------------------------------------
library(readxl)
tdata <- read_excel("wlfdata.xlsx")
View(tdata)
glimpse(tdata)
class(tdata)
tdata <- as_tibble(tdata)
class(tdata)
tdata <- tdata %>%
clean_names() %>%
rename( w_tempmax = tempmaxw,
w_tempmin = tempminw,
w_temp = tempw,
w_humid = humidityw,
w_precip = precipw,
w_precov = precipcovw)
tdata$state <- as.factor(tdata$state)
tdata$epiweek <- as.factor(tdata$epiweek)
tdata$year <- as.factor(tdata$year)
tdata$cases <- as.numeric(tdata$cases)
glimpse(tdata)
View(tdata)
mean_cases <- tdata %>%
group_by(state, year) %>%
summarise(mean_cases = mean(cases, na.rm = TRUE)) %>%
print()
tdata_fill <-tdata %>%
left_join(mean_cases, by =c("state", "year")) %>%
mutate(cases = ifelse(is.na(cases), mean_cases, cases)) %>%
select(-mean_cases)
#Print the filled data frame
print(tdata_fill)
View(tdata_fill)
tdata_fill <-tdata_fill %>%
mutate(cases = round(cases,1))
print(tdata_fill)
View(tdata_fill)
tdata_fill <-tdata_fill %>%
mutate(cases = round(cases,1))
print(tdata_fill)
View(tdata_fill)
#determine mean and standard deviation of climate variables
mean_climate <- tdata_fill  %>%
group_by(state,year) %>%
summarise( meanw_tempmin = mean(w_tempmin),
meanw_temp = mean(w_temp),
meanw_tempmax = mean(w_tempmax),
meanw_precip = mean(w_precip),
meanw_precov = mean(w_precov),
meanw_humid = mean(w_humid))
print(mean_climate)
#Calculate standard deviations for all variables
standard_deviations <- tdata_fill %>%
group_by(state, year) %>%
summarise(sd_cases = sd(cases),
sd_w_tempmin = sd(w_tempmin),
sd_w_temp = sd(w_temp),
sd_w_tempmax = sd(w_tempmax),
sd_w_humid = sd(w_humid),
sd_w_precip = sd(w_precip),
sd_w_precov = sd(w_precov))
print(standard_deviations)
#create table for mean and standard deviations
#Merge mean cases and mean climate
merged_table <- left_join(mean_cases, mean_climate, by = c("state", "year"))
print(merged_table)
#Calculate standard deviations for climate variables
standard_deviations <- tdata_fill %>%
group_by(state, year) %>%
summarise(sd_cases = sd(cases),
sd_w_tempmin = sd(w_tempmin),
sd_w_temp = sd(w_temp),
sd_w_tempmax = sd(w_tempmax),
sd_w_humid = sd(w_humid),
sd_w_precip = sd(w_precip),
sd_w_precov = sd(w_precov))
# Merge standard deviations with the previously merged table
merged_table <- left_join(merged_table, standard_deviations, by = c("state", "year"))
print(merged_table)
View(merged_table)
#cases
histogram <- tdata_fill %>%
ggplot(aes(x = cases)) + geom_histogram(bins = 10) +  facet_grid(state ~ year) +
labs(x = "Cases", y = "Frequency", title = "Cases by State and Year")
print(histogram)
histogram <- tdata_fill %>%
ggplot(aes(x = w_temp)) + geom_histogram(bins = 10) +  facet_grid(state ~ year) +
labs(x = "Temperature", y = "Frequency", title = "Temperature by State and Year")
print(histogram)
histogram <- tdata_fill %>%
ggplot(aes(x = w_precip)) + geom_histogram(bins = 10) +  facet_grid(state ~ year) +
labs(x = "precipitation", y = "Frequency", title = "Temperature by State and Year")
print(histogram)
#bar chart of total number of cases by epiweek
ggplot(data = tdata_fill, aes(x = epiweek, y = cases)) +
geom_bar(stat = "identity") +
facet_wrap(~ state) +
labs(x = "Epiweek", y = "Cases", title = "Cases by Epiweek")
#stacked bar chart of cases by epiweek
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = factor(year))) +
geom_bar(stat = "identity") +
facet_wrap(~ state) +
labs(x = "Epiweek", y = "cases", title = "Cases by Epiweek per Year")
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = year)) +
geom_bar(stat = "identity") +
facet_wrap(~ state) +
labs(x = "Epiweek", y = "cases", title = "Cases by Epiweek per Year")
side by side bar chart: Number of cases per epiweek per state
side by side bar chart: Number of cases per epiweek per state
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = state))+ geom_bar (stat ="identity", position = "dodge") +
facet_wrap(~ year) + labs(title = "Weekly Case count across States")
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, group = interaction(state, year), color = year)) +
geom_line() + facet_wrap(~ state) + labs(x = "Epiweek", y = "cases", title = "Cases by Epiweek")
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, fill = year)) +
geom_bar(stat = "identity") +
facet_wrap(~ state) +
labs(x = "Epiweek", y = "cases", title = "Cases by Epiweek per Year")
ggplot(data = tdata_fill, aes(x = epiweek, y = cases, group = interaction(state, year), color = year)) +
geom_line() + facet_wrap(~ state) + labs(x = "Epiweek", y = "cases", title = "Cases by Epiweek")
line graph of temperature by epiweek across years
line graph of temperature by epiweek across years
ggplot(data = tdata_fill, aes(x = epiweek, y = w_temp, group = interaction(state, year), color = year)) +
geom_line() + facet_wrap(~ state) + labs(x = "Epiweek", y = "temperature", title = "Temperature by Epiweek")
calculate_group_correlations <- function(tdata_fill) {
correlations <- tdata_fill %>%
select(cases, w_tempmin, w_temp, w_tempmax, w_humid, w_precip, w_precov) %>%
correlate(method = "spearman")
return(correlations)
}
#applying the function to create a grouped correlation table
correlation_tab <- tdata_fill %>%
group_by(state, year) %>%
do(calculate_group_correlations(.))
print(correlation_tab)
View (correlation_tab)
correlation_table <- tdata_fill %>%
ungroup()
correlation_results <- correlation_table %>%
select(cases, w_tempmin, w_temp, w_tempmax, w_humid, w_precip, w_precov) %>%
correlate(method = "spearman")
print(correlation_results)
View(correlation_results)
library(readxl)
tdata <- read_excel("wlfdata.xlsx")
View(tdata)
class(tdata)
tdata <- as_tibble(tdata)
class(tdata)
library(readxl)
tdata <- read_excel("wlfdata.xlsx")
View(tdata)
class(tdata)
