corrplot,
Hmisc,
flextable,
officer,
knitr
)
calculate_group_correlations <- function(mdata) {
selected_data <- mdata %>%
select(cases, m_tempmin, m_temp, m_tempmax, m_humid, m_precip, m_precov)
correlation_matrix <- rcorr(as.matrix(selected_data), type = "spearman")
correlations <- as.data.frame(correlation_matrix$r)
p_values <- as.data.frame(correlation_matrix$P)
formatted_p_values <- p_values %>%
mutate_all(~ ifelse(. < 0.001, "<0.001", round(., 3)))
combined_table <- correlations %>%
rownames_to_column(var = "Variable1") %>%
gather(key = "Variable2", value = "Correlation", -Variable1) %>%
inner_join(
formatted_p_values %>%
rownames_to_column(var = "Variable1") %>%
gather(key = "Variable2", value = "P_Value", -Variable1),
by = c("Variable1", "Variable2")
) %>%
arrange(Variable1, Variable2)
return(combined_table)
}
correlation_table <- mdata %>%
group_by(state, year) %>%
do(calculate_group_correlations(.)) %>%
ungroup()
correlation_table %>%
gt() %>%
tab_header(
title = "Correlation and P-Values by State and Year",
subtitle = "Spearman Correlation Coefficients and Corresponding P-Values"
) %>%
cols_label(
Variable1 = "Variable 1",
Variable2 = "Variable 2",
Correlation = "Correlation Coefficient",
P_Value = "P-Value"
) %>%
fmt_number(
columns = vars(Correlation),
decimals = 3
) %>%
fmt_markdown(
columns = vars(P_Value)
) %>%
tab_style(
style = cell_text(weight = "bold"),
locations = cells_column_labels(everything())
) %>%
tab_style(
style = cell_text(size = px(10)),
locations = cells_body()
) %>%
tab_options(
table.width = pct(100),
table.font.size = "small"
)
correlation_table %>%
gt() %>%
tab_header(
title = "Correlation and P-Values by State and Year",
subtitle = "Spearman Correlation Coefficients and Corresponding P-Values"
) %>%
cols_label(
Variable1 = "Variable 1",
Variable2 = "Variable 2",
Correlation = "Correlation Coefficient",
P_Value = "P-Value"
) %>%
fmt_number(
columns = vars(Correlation),
decimals = 3
) %>%
fmt_markdown(
columns = vars(P_Value)
) %>%
tab_style(
style = cell_text(weight = "bold"),
locations = cells_column_labels(everything())
) %>%
tab_style(
style = cell_text(size = px(10)),
locations = cells_body()
) %>%
tab_options(
table.width = pct(100),
table.font.size = "small"
)
correlation_table %>%
gt() %>%
tab_header(
title = "Correlation and P-Values by State and Year",
subtitle = "Spearman Correlation Coefficients and Corresponding P-Values"
) %>%
cols_label(
Variable1 = "Variable 1",
Variable2 = "Variable 2",
Correlation = "Correlation Coefficient",
P_Value = "P-Value"
) %>%
fmt_number(
columns = vars(Correlation),
decimals = 3
) %>%
fmt_markdown(
columns = vars(P_Value)
) %>%
tab_style(
style = cell_text(weight = "bold"),
locations = cells_column_labels(everything())
) %>%
tab_style(
style = cell_text(size = px(10)),
locations = cells_body()
)
correlation_table %>%
gt() %>%
tab_header(
title = "Correlation and P-Values by State and Year",
subtitle = "Spearman Correlation Coefficients and Corresponding P-Values"
) %>%
cols_label(
Variable1 = "Variable 1",
Variable2 = "Variable 2",
Correlation = "Correlation Coefficient",
P_Value = "P-Value"
) %>%
fmt_number(
columns = vars(Correlation),
decimals = 3
) %>%
fmt_markdown(
columns = vars(P_Value)
) %>%
tab_style(
style = cell_text(weight = "bold"),
locations = cells_column_labels(everything())
)
correlation_table %>%
gt() %>%
tab_header(
title = "Correlation and P-Values by State and Year",
subtitle = "Spearman Correlation Coefficients and Corresponding P-Values"
) %>%
cols_label(
Variable1 = "Variable 1",
Variable2 = "Variable 2",
Correlation = "Correlation Coefficient",
P_Value = "P-Value"
) %>%
fmt_number(
columns = vars(Correlation),
decimals = 3
) %>%
fmt_markdown(
columns = vars(P_Value)
)
correlation_table %>%
gt() %>%
tab_header(
title = "Correlation and P-Values by State and Year",
subtitle = "Spearman Correlation Coefficients and Corresponding P-Values"
) %>%
cols_label(
Variable1 = "Variable 1",
Variable2 = "Variable 2",
Correlation = "Correlation Coefficient",
P_Value = "P-Value"
)
correlation_table %>%
gt() %>%
tab_header(
title = "Correlation and P-Values by State and Year",
subtitle = "Spearman Correlation Coefficients and Corresponding P-Values"
)
correlation_table %>%
gt() %>%
correlation_table %>% select(!c(month)) %>%
tbl_summary(by = state, year, p_values,  statistic = list
(all_continuous() ~ digits = all_continuous() ~2))
correlation_table %>% select(!c(month)) %>%
tbl_summary(by = state, year, p_values,  statistic = list
(all_continuous() ~2))
correlation_table %>%
tbl_summary(by = state, year, p_values,  statistic = list
(all_continuous() ~2))
correlation_table %>%
tbl_summary(by = state, year,  statistic = list
(all_continuous() ~2))
calculate_group_correlations <- function(mdata) {
# Select relevant columns
selected_data <- mdata %>%
select(cases, m_tempmin, m_temp, m_tempmax, m_humid, m_precip, m_precov)
# Calculate Spearman correlations with p-values using rcorr
correlation_matrix <- rcorr(as.matrix(selected_data), type = "spearman")
# Extract correlation coefficients and p-values
correlations <- as.data.frame(correlation_matrix$r)
p_values <- as.data.frame(correlation_matrix$P)
# Reshape data from wide to long format
correlations_long <- correlations %>%
rownames_to_column(var = "Variable1") %>%
gather(key = "Variable2", value = "Correlation", -Variable1)
p_values_long <- p_values %>%
rownames_to_column(var = "Variable1") %>%
gather(key = "Variable2", value = "P_Value", -Variable1)
# Merge correlations and p-values
results <- merge(correlations_long, p_values_long, by = c("Variable1", "Variable2"))
return(results)
}
correlation_table2 <- mdata %>%
group_by(state) %>%
do(calculate_group_correlations(.))
print(correlation_table2)
View(correlation_table2)
calculate_group_correlations <- function(mdata) {
correlations <- mdata %>%
select(cases, m_tempmin, m_temp, m_tempmax, m_humid, m_precip, m_precov) %>%
correlate(method = "spearman")
return(correlations)
}
#applying the function to create a grouped correlation table by state and year
correlation_table3 <- mdata %>%
group_by(state) %>%
do(calculate_group_correlations(.) )
print(correlation_table3)
View(correlation_table3)
calculate_group_correlations <- function(mdata) {
# Select relevant columns
selected_data <- mdata %>%
select(cases, m_tempmin, m_temp, m_tempmax, m_humid, m_precip, m_precov)
# Calculate Spearman correlations with p-values using rcorr
correlation_matrix <- rcorr(as.matrix(selected_data), type = "spearman")
# Extract correlation coefficients and p-values
correlations <- as.data.frame(correlation_matrix$r)
p_values <- as.data.frame(correlation_matrix$P)
# Reshape data from wide to long format
correlations_long <- correlations %>%
rownames_to_column(var = "Variable1") %>%
gather(key = "Variable2", value = "Correlation", -Variable1)
p_values_long <- p_values %>%
rownames_to_column(var = "Variable1") %>%
gather(key = "Variable2", value = "P_Value", -Variable1)
# Merge correlations and p-values
results <- merge(correlations_long, p_values_long, by = c("Variable1", "Variable2"))
return(results)
}
correlation_table2 <- mdata %>%
group_by(state) %>%
do(calculate_group_correlations(.))
print(correlation_table2)
View(correlation_table2)
calculate_group_correlations <- function(mdata) {
correlations <- mdata %>%
select(cases, m_tempmin, m_temp, m_tempmax, m_humid, m_precip, m_precov) %>%
correlate(method = "spearman")
return(correlations)
}
#applying the function to create a grouped correlation table by state and year
correlation_table3 <- mdata %>%
group_by(state) %>%
do(calculate_group_correlations(.) )
print(correlation_table3)
View(correlation_table3)
calculate_group_correlations <- function(mdata) {
# Select the relevant columns
selected_data <- mdata %>%
select(cases, m_tempmin, m_temp, m_tempmax, m_humid, m_precip, m_precov)
# Calculate Spearman correlations and p-values
corr_result <- rcorr(as.matrix(selected_data), type = "spearman")
# Extract the correlation matrix and p-value matrix
correlations <- as.data.frame(corr_result$r)
p_values <- as.data.frame(corr_result$P)
# Add row and column names to p-values dataframe for clarity
rownames(p_values) <- rownames(correlations)
colnames(p_values) <- colnames(correlations)
# Combine correlations and p-values into a single dataframe
combined_result <- list(correlations = correlations, p_values = p_values)
return(combined_result)
}
# Applying the function to create a grouped correlation table by state
correlation_table3 <- mdata %>%
group_by(state) %>%
do(calculate_group_correlations(.))
tbl_strata <-
mdata %>% select(!c(month)) %>%
mutate(year = paste("Year", year)) %>%
tbl_strata(
strata= year,
~tbl_summary(.x, by = state, statistic = all_continuous() ~ "{mean} ({sd}")%>%
add_p() %>%
modify_header(all_stat_cols() ~ "**{level}**"),
theme_gtsummary_compact() )
print(tbl_strata)
ggsave("tbl_strata.png")
doc <- read_docx()
doc <- doc %>%
body_add_img(src= "tbl_strata.png", width = 6, height = 4, style = "centered" )
print(doc, target = "plot_document.docx")
#test code for autocorrealtion
mdata %>%
## keep the variables we are interested
select(month, cases, m_temp) %>%
## change your data in to long format
pivot_longer(
## use epiweek as your key
!month,
## move column names to the new "measure" column
names_to = "measure",
## move cell values to the new "values" column
values_to = "value") %>%
## create a plot with the dataset above
## plot epiweek on the x axis and values (counts/celsius) on the y
ggplot(aes(x = month, y = value)) +
## create a separate plot for temperate and case counts
## let them set their own y-axes
facet_grid(measure ~ ., scales = "free_y") +
## plot both as a line
geom_point() + geom_line()
calculate_group_correlations <- function(mdata) {
correlations <- mdata %>%
select(cases, m_tempmin, m_temp, m_tempmax, m_humid, m_precip, m_precov) %>%
correlate(method = "spearman")
return(correlations)
}
#applying the function to create a grouped correlation table by state and year
correlation_table <- mdata %>%
group_by(state, year) %>%
do(calculate_group_correlations(.) )
print(correlation_table)
calculate_group_correlations <- function(mdata) {
# Select relevant columns
selected_data <- mdata %>%
select(cases, m_tempmin, m_temp, m_tempmax, m_humid, m_precip, m_precov)
# Calculate Spearman correlations with p-values using rcorr
correlation_matrix <- rcorr(as.matrix(selected_data), type = "spearman")
# Extract correlation coefficients and p-values
correlations <- as.data.frame(correlation_matrix$r)
p_values <- as.data.frame(correlation_matrix$P)
# Reshape data from wide to long format
correlations_long <- correlations %>%
rownames_to_column(var = "Variable1") %>%
gather(key = "Variable2", value = "Correlation", -Variable1)
p_values_long <- p_values %>%
rownames_to_column(var = "Variable1") %>%
gather(key = "Variable2", value = "P_Value", -Variable1)
# Merge correlations and p-values
results <- merge(correlations_long, p_values_long, by = c("Variable1", "Variable2"))
return(results)
}
correlation_table <- mdata %>%
group_by(state, year) %>%
do(calculate_group_correlations(.))
print(correlation_table)
View(correlation_table)
calculate_group_correlations <- function(mdata) {
# Select relevant columns
selected_data <- mdata %>%
select(cases, m_tempmin, m_temp, m_tempmax, m_humid, m_precip, m_precov)
# Calculate Spearman correlations with p-values using rcorr
correlation_matrix <- rcorr(as.matrix(selected_data), type = "spearman")
# Extract correlation coefficients and p-values
correlations <- as.data.frame(correlation_matrix$r)
p_values <- as.data.frame(correlation_matrix$P)
# Reshape data from wide to long format
correlations_long <- correlations %>%
rownames_to_column(var = "Variable1") %>%
gather(key = "Variable2", value = "Correlation", -Variable1)
p_values_long <- p_values %>%
rownames_to_column(var = "Variable1") %>%
gather(key = "Variable2", value = "P_Value", -Variable1)
# Merge correlations and p-values
results <- merge(correlations_long, p_values_long, by = c("Variable1", "Variable2"))
return(results)
}
correlation_table <- mdata %>%
group_by(state) %>%
do(calculate_group_correlations(.))
print(correlation_table)
View(correlation_table)
calculate_group_correlations <- function(mdata) {
correlations <- mdata %>%
select(cases, m_tempmin, m_temp, m_tempmax, m_humid, m_precip, m_precov) %>%
correlate(method = "spearman")
return(correlations)
}
#applying the function to create a grouped correlation table by state and year
correlation_table <- mdata %>%
group_by(state, year) %>%
do(calculate_group_correlations(.) )
print(correlation_table)
calculate_group_correlations <- function(mdata) {
# Select relevant columns
selected_data <- mdata %>%
select(cases, m_tempmin, m_temp, m_tempmax, m_humid, m_precip, m_precov)
# Calculate Spearman correlations with p-values using rcorr
correlation_matrix <- rcorr(as.matrix(selected_data), type = "spearman")
# Extract correlation coefficients and p-values
correlations <- as.data.frame(correlation_matrix$r)
p_values <- as.data.frame(correlation_matrix$P)
# Reshape data from wide to long format
correlations_long <- correlations %>%
rownames_to_column(var = "Variable1") %>%
gather(key = "Variable2", value = "Correlation", -Variable1)
p_values_long <- p_values %>%
rownames_to_column(var = "Variable1") %>%
gather(key = "Variable2", value = "P_Value", -Variable1)
# Merge correlations and p-values
results <- merge(correlations_long, p_values_long, by = c("Variable1", "Variable2"))
return(results)
}
correlation_table1 <- mdata %>%
group_by(state, year) %>%
do(calculate_group_correlations(.))
print(correlation_table1)
View(correlation_table1)
calculate_group_correlations <- function(mdata) {
correlations <- mdata %>%
select(cases, m_tempmin, m_temp, m_tempmax, m_humid, m_precip, m_precov) %>%
correlate(method = "spearman")
return(correlations)
}
#applying the function to create a grouped correlation table by state and year
correlation_table3 <- mdata %>%
group_by(state) %>%
do(calculate_group_correlations(.) )
print(correlation_table3)
View(correlation_table3)
calculate_group_correlations <- function(mdata) {
correlations <- mdata %>%
select(cases, m_tempmin, m_temp, m_tempmax, m_humid, m_precip, m_precov) %>%
correlate(method = "spearman")
# Calculate p-values for correlation coefficients
p_values <- sapply(correlations$correlation, function(correlation_coefficient) {
cor_test <- cor.test(correlation_coefficient)
return(cor_test$p.value)
})
# Combine correlation coefficients and p-values into a data frame
result <- data.frame(correlation = correlations$correlation, p_value = p_values)
return(result)
}
# Apply the function to create a grouped correlation table by state and year
correlation_table2 <- mdata %>%
group_by(state, year) %>%
do({
correlations <- calculate_group_correlations(.data)
correlations
})
# Print correlation table with correlation coefficients and p-values
print(correlation_table2)
View(correlation_table2)
calculate_group_correlations <- function(mdata) {
# Select relevant columns
selected_data <- mdata %>%
select(cases, m_tempmin, m_temp, m_tempmax, m_humid, m_precip, m_precov)
# Handle missing values (if any)
selected_data <- na.omit(selected_data)
# Calculate Spearman correlations with p-values using rcorr
correlation_matrix <- rcorr(as.matrix(selected_data), type = "spearman")
# Extract correlation coefficients and p-values
correlations <- as.data.frame(correlation_matrix$r)
p_values <- as.data.frame(correlation_matrix$P)
# Reshape data from wide to long format
correlations_long <- correlations %>%
rownames_to_column(var = "Variable1") %>%
pivot_longer(-Variable1, names_to = "Variable2", values_to = "Correlation")
p_values_long <- p_values %>%
rownames_to_column(var = "Variable1") %>%
pivot_longer(-Variable1, names_to = "Variable2", values_to = "P_Value")
# Merge correlations and p-values
results <- merge(correlations_long, p_values_long, by = c("Variable1", "Variable2"))
return(results)
}
# Applying the function to create a grouped correlation table by state
correlation_table1 <- mdata %>%
group_by(state) %>%
do(calculate_group_correlations(.)) %>%
ungroup()
# Print and view the correlation table
print(correlation_table1)
View(correlation_table1)
calculate_group_correlations <- function(mdata) {
# Select relevant columns
selected_data <- mdata %>%
select(cases, m_tempmin, m_temp, m_tempmax, m_humid, m_precip, m_precov)
# Calculate Spearman correlations with p-values using rcorr
correlation_matrix <- rcorr(as.matrix(selected_data), type = "spearman")
# Extract correlation coefficients and p-values
correlations <- as.data.frame(correlation_matrix$r)
p_values <- as.data.frame(correlation_matrix$P)
# Reshape data from wide to long format
correlations_long <- correlations %>%
rownames_to_column(var = "Variable1") %>%
pivot_longer(-Variable1, names_to = "Variable2", values_to = "Correlation")
p_values_long <- p_values %>%
rownames_to_column(var = "Variable1") %>%
pivot_longer(-Variable1, names_to = "Variable2", values_to = "P_Value")
# Merge correlations and p-values
results <- merge(correlations_long, p_values_long, by = c("Variable1", "Variable2"))
return(results)
}
# Applying the function to create a grouped correlation table by state
correlation_table1 <- mdata %>%
group_by(state) %>%
do(calculate_group_correlations(.)) %>%
ungroup()
# Print and view the correlation table
print(correlation_table1)
View(correlation_table1)
